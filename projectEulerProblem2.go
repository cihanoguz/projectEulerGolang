/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
package main

import "fmt"
func fib2(n int) uint {
	if n == 0 {
        return 0
    } else if n == 1 {
		return 1
	} else {
		return fib2(n-1) + fib2(n-2)
	}
}
func oddControlAndSum(n int) uint{
	var fib uint
		fib = 0
	for i := 0; i < n; i++ {
		if fib2(i) %2 == 1{
			fib +=fib2(i)
		}
		
	}
	return fib
}


func main(){
	
	fmt.Println("enter a number:")
	var n int
	fmt.Scan(&n)
	/*
	for i := 0; i < n; i++ {
		fmt.Println(fib2(i))
	}*/
	fmt.Println(oddControlAndSum(n))


}